#include <bits/stdc++.h> 
using namespace std; 
bool isInBigString(string bigString, string smallString); 
bool isInBigStringHelper(string bigString, string smallString, int startIdx); 
vector<bool> multiStringSearch(string bigString,vector<string> smallStrings) 
{ 
	vector<bool> solution; 

	for (string smallString : smallStrings) { 

		solution.push_back(isInBigString(bigString, smallString)); 
	} 
	return solution; 
} 

bool isInBigString(string bigString, string smallString) 
{ 
 
	for (int i = 0; i < bigString.length(); i++) { 

		if (i + smallString.length() > bigString.length()) { 
			break; 
		} 
 
		if (isInBigStringHelper(bigString, smallString, i)) { 
			return true; 
		} 
	} 
	return false; 
} 

bool isInBigStringHelper(string bigString, string smallString, int startIdx) 
{ 

	int leftBigIdx = startIdx; 
	int rightBigIdx = startIdx + smallString.length() - 1; 
	int leftSmallIdx = 0; 
	int rightSmallIdx = smallString.length() - 1; 

	while (leftBigIdx <= rightBigIdx) { 

		if (bigString[leftBigIdx] != smallString[leftSmallIdx] || 
			bigString[rightBigIdx] != smallString[rightSmallIdx]) { 
			return false; 
		} 

		leftBigIdx++; 
		rightBigIdx--; 
		leftSmallIdx++; 
		rightSmallIdx--; 
	} 

	return true; 
} 

int main(int argc, char* argv[]) 
{ 
	string str;
	cout<<"Enter the big string"<<endl;
	cin>>str;
	vector<string> substr[];
	int n;
	cout<<"Enter number of SUb String"<<endl;
	cin>>n>>endl;
	cout<<"Enter the small strings"<<endl;
	for(int i=0;i<n;i++)
	cin>>substr[n]>>endl;

	vector<bool> ans = multiStringSearch(str, substr); 

	for (int i = 0; i < ans.size(); i++) { 


		if (ans[i] == 1) { 
			cout << "Yes" << " "; 
		} 
		else { 
			cout << "No" << " "; 
		} 
	} 
	return 0; 
} 
